- name: Setup - install common dependencies
  apt:
    pkg:
      - rsync
      - ca-certificates
      - build-essential
      - postgresql-server-dev-{{ postgresql_major }}
      - curl
      - git
      - gpp
      - cpp
      - pkg-config
      - apt-transport-https
      - cmake
      - ninja-build
      - python-is-python2
      - zlib1g-dev
      - liblzo2-dev
      - libmsgpack-dev
      - libzmq3-dev
      - libevent-dev
      - libmecab-dev
      # from 08-plpgsql_check
      - libicu-dev
      # from pg_net & pgsql-http
      - libcurl4-openssl-dev
      - libcurl4
    update_cache: yes
    install_recommends: no

# Find platform architecture and set as a variable
- name: Setup - finding platform architecture
  shell: if [ $(uname -m) = "aarch64" ]; then echo "arm64";  else echo "amd64"; fi
  register: platform_output
- set_fact:
    platform: "{{ platform_output.stdout }}"

- name: Setup - import postgresql.conf
  template:
    src: files/postgresql_config/postgresql.conf.j2
    dest: /etc/postgresql/postgresql.conf

- name: Setup - import postgresql.conf
  synchronize:
    src: files/postgresql_config/pg_hba.conf.j2
    dest: /etc/postgresql/pg_hba.conf

- name: Setup - import postgresql.conf
  synchronize:
    src: files/postgresql_config/pg_ident.conf.j2
    dest: /etc/postgresql/pg_ident.conf

- set_fact:
    regex_string: "#unix_socket_directories = '/tmp'"

- name: Setup - modify unix_socket_directories
  become: yes
  replace:
    path: /etc/postgresql/postgresql.conf
    regexp: '{{ regex_string }}'
    replace: unix_socket_directories = '/var/run/postgresql'

- name: Setup - modify unix_socket_directories
  become: yes
  replace:
    path: /etc/postgresql/postgresql.conf
    regexp: '{{ regex_string }}'
    replace: unix_socket_directories = '/var/run/postgresql'
